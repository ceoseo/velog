enum ReadingListOption {
  LIKED
  READ
}

type ReadCountByDay {
  count: Int
  day: Date
}

type Stats {
  total: Int
  count_by_day: [ReadCountByDay]
}

type LinkedPosts {
  previous: Post
  next: Post
}

type Post {
  id: ID!
  title: String
  body: String
  short_description: String
  thumbnail: String
  is_markdown: Boolean
  is_temp: Boolean
  fk_user_id: String!
  original_post_id: ID
  url_slug: String
  likes: Int
  meta: JSON
  views: Int
  created_at: Date!
  updated_at: Date!
  is_private: Boolean!
  released_at: Date
  user: User
  comments: [Comment!]!
  tags: [String!]!
  comments_count: Int
  series: Series
  is_liked: Boolean
  linked_posts: LinkedPosts
  last_read_at: Date
  recommended_posts: [Post!]!
  is_followed: Boolean
}

type SearchResult {
  count: Int!
  posts: [Post!]!
}

type PostHistory {
  id: ID
  fk_post_id: ID
  title: String
  body: String
  is_markdown: Boolean
  created_at: Date
}

type Query {
  post(input: ReadPostInput!): Post
  posts(input: GetPostsInput!): [Post!]!
  recentPosts(input: RecentPostsInput!): [Post!]!
  trendingPosts(input: TrendingPostsInput!): [Post!]!
  feedPosts(input: FeedPostsInput!): [Post!]!
  searchPosts(input: GetSearchPostsInput!): SearchResult!
  # postHistories(post_id: ID): [PostHistory]
  # lastPostHistory(post_id: ID!): PostHistory
  readingList(input: ReadingListInput!): [Post!]!
  # getStats(post_id: ID!): Stats
}

type Mutation {
  writePost(input: WritePostInput!): Post!
  editPost(input: EditPostInput!): Post!
  # createPostHistory(
  #   post_id: ID!
  #   title: String!
  #   body: String!
  #   is_markdown: Boolean!
  # ): PostHistory
  # removePost(id: ID!): Boolean
  likePost(input: LikePostInput!): Post!
  unlikePost(input: UnlikePostInput!): Post!
  # postView(id: ID!): Boolean
}

input WritePostInput {
  title: String!
  body: String!
  tags: [String!]!
  is_markdown: Boolean!
  is_temp: Boolean!
  is_private: Boolean!
  url_slug: String!
  thumbnail: String
  meta: JSON!
  series_id: ID
  token: String
}

input EditPostInput {
  id: ID!
  title: String!
  body: String!
  tags: [String!]!
  is_markdown: Boolean!
  is_temp: Boolean!
  is_private: Boolean!
  url_slug: String!
  thumbnail: String
  meta: JSON!
  series_id: ID
  token: String
}

input ReadPostInput {
  id: ID
  username: String
  url_slug: String
}

input GetPostsInput {
  cursor: ID
  username: String
  temp_only: Boolean
  tag: String
  limit: Int
}

input GetSearchPostsInput {
  keyword: String!
  offset: Int
  limit: Int
  username: String
}

input ReadingListInput {
  type: ReadingListOption!
  cursor: ID
  limit: Int
}

input TrendingPostsInput {
  offset: Int
  limit: Int
  timeframe: String
}

input RecentPostsInput {
  cursor: ID
  limit: Int
}

input FeedPostsInput {
  offset: Int
  limit: PositiveInt
}

input LikePostInput {
  postId: ID
}

input UnlikePostInput {
  postId: ID
}
