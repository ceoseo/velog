type User {
  id: ID!
  username: String!
  email: String
  created_at: Date!
  updated_at: Date!
  is_certified: Boolean!
  profile: UserProfile!
  velog_config: VelogConfig
  series_list: [Series!]!
  user_meta: UserMeta
  followers_count: Int!
  followings_count: Int!
  is_followed: Boolean!
  is_trusted: Boolean!
}

type UserProfile {
  id: ID!
  display_name: String!
  short_bio: String!
  thumbnail: String
  created_at: Date!
  updated_at: Date!
  about: String!
  profile_links: JSON!
}

type VelogConfig {
  id: ID!
  title: String
  logo_image: String
}

type UserMeta {
  id: ID!
  email_notification: Boolean
  email_promotion: Boolean
}

type UserToken {
  accessToken: String!
  refreshToken: String!
}

type Query {
  user(input: GetUserInput!): User
  velogConfig(input: GetVelogConfigInput!): VelogConfig!
  currentUser: User
  restoreToken: UserToken!
  unregisterToken: String!
  checkEmailExists(input: CheckEmailExistsInput!): Boolean!
}

type Mutation {
  updateAbout(input: UpdateAboutInput!): UserProfile
  updateThumbnail(input: UpdateThumbnailInput!): UserProfile
  updateProfile(input: UpdateProfileInput!): UserProfile
  updateVelogTitle(input: UpdateVelogTitleInput!): VelogConfig
  updateSocialInfo(input: UpdateSocialInfoInput!): UserProfile
  updateEmailRules(input: UpdateEmailRulesInput!): UserMeta
  unregister(input: UnregisterInput!): Void
  logout: Void
  acceptIntegration: String!
  initiateChangeEmail(input: InitiateChangeEmailInput!): Void
  confirmChangeEmail(input: ConfirmChangeEmailInput!): Void
}

input GetUserInput {
  id: ID
  username: String
}

input GetVelogConfigInput {
  username: String!
}

input UpdateAboutInput {
  about: String!
}

input UpdateThumbnailInput {
  url: String
}

input UpdateProfileInput {
  display_name: String!
  short_bio: String!
}

input UpdateVelogTitleInput {
  title: String!
}

input UpdateSocialInfoInput {
  profile_links: JSON!
}

input UpdateEmailRulesInput {
  notification: Boolean!
  promotion: Boolean!
}

input UnregisterInput {
  token: String!
}

input InitiateChangeEmailInput {
  email: String!
}

input ConfirmChangeEmailInput {
  code: String!
}

input CheckEmailExistsInput {
  email: String!
}
